<?php

require_once 'PHPUnit/Framework.php';

require_once dirname(__FILE__) . '/../Benchmark/Benchmark.php';

/**
 * Test class for File.
 * Generated by PHPUnit on 2010-09-08 at 16:36:35.
 */
class FileTest extends PHPUnit_Framework_TestCase
{

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {

    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {

    }

    /**
     * @expectedException FileNotFoundException
     */
    public function testConstructor_InvalidArgument()
    {
        $file = new File(1); // integer
    }

    /**
     * @expectedException FileNotFoundException
     */
    public function testConstructor_FileDoesNotExist()
    {
        $file = new File('unknownfile.txt');
    }

    /**
     * @covers File::__construct
     * @covers File::getFilename
     */
    public function testConstructor()
    {
        $filename = dirname(__FILE__) . '/helper/function_doSomething.php';
        $file = new File($filename);
        self::assertSame($filename, $file->getFilename());
    }

    /**
     * @covers File::getPart
     */
    public function testGetPart_InTheMiddle()
    {
        $filename = dirname(__FILE__) . '/helper/line_number.txt';
        $file = new File($filename);

        $file_content = $file->getPart(3, 4);
        self::assertSame("3\n4\n", $file_content);
    }

    /**
     * @covers File::getPart
     */
    public function testGetPart_AtTheStart()
    {
        $filename = dirname(__FILE__) . '/helper/line_number.txt';
        $file = new File($filename);

        $file_content = $file->getPart(1, 2);
        self::assertSame("1\n2\n", $file_content);
    }

    /**
     * @covers File::getPart
     */
    public function testGetPart_AtTheEnd()
    {
        $filename = dirname(__FILE__) . '/helper/line_number.txt';
        $file = new File($filename);

        $file_content = $file->getPart(7, 8);
        self::assertSame("7\n8", $file_content);
    }

    /**
     * @covers File::getPart
     */
    public function testGetPart_SingleLine()
    {
        $filename = dirname(__FILE__) . '/helper/line_number.txt';
        $file = new File($filename);

        $file_content = $file->getPart(3, 3);
        self::assertSame("3\n", $file_content);
    }

    /**
     * @covers File::getPart
     */
    public function testGetPart_BeforeStart()
    {
        $filename = dirname(__FILE__) . '/helper/line_number.txt';
        $file = new File($filename);

        $file_content = $file->getPart(-1, 1);
        self::assertSame("1\n", $file_content);
    }

    /**
     * @covers File::getPart
     */
    public function testGetPart_OverTheEnd()
    {
        $filename = dirname(__FILE__) . '/helper/line_number.txt';
        $file = new File($filename);

        $file_content = $file->getPart(8, 14);
        self::assertSame("8", $file_content);
    }

    /**
     * @covers File::getPart
     */
    public function testGetPart_InvalidArguments()
    {
        $filename = dirname(__FILE__) . '/helper/line_number.txt';
        $file = new File($filename);

        self::assertFalse($file->getPart('string', 1));
        self::assertFalse($file->getPart(true, 1));
        self::assertFalse($file->getPart(array(), 1));

        self::assertFalse($file->getPart(1, 'string'));
        self::assertFalse($file->getPart(1, true));
        self::assertFalse($file->getPart(1, array()));
    }
}
